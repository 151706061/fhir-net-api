<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{34A3B072-5ABC-4F7C-B7E8-0AB67C58CC61}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Hl7.Fhir</RootNamespace>
    <AssemblyName>Hl7.Fhir.DSTU2.Specification</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\Net45\</OutputPath>
    <BaseIntermediateOutputPath>obj\Debug\Net45\</BaseIntermediateOutputPath>
    <DefineConstants>TRACE;DEBUG;NET45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>false</RunCodeAnalysis>
    <DocumentationFile>bin\Debug\Net45\Hl7.Fhir.DSTU2.Specification.xml</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
    <NoWarn>1591</NoWarn>
    <LangVersion>5</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\Net45\</OutputPath>
    <BaseIntermediateOutputPath>obj\Release\Net45\</BaseIntermediateOutputPath>
    <DefineConstants>TRACE;NET45</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Net45\Hl7.Fhir.DSTU2.Specification.xml</DocumentationFile>
    <Prefer32Bit>false</Prefer32Bit>
    <NoWarn>1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Hl7.FluentPath, Version=0.3.1.0, Culture=neutral, PublicKeyToken=d706911480550fc3, processorArchitecture=MSIL">
      <HintPath>..\packages\Hl7.FluentPath.0.3.1-alpha4\lib\net45\Hl7.FluentPath.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Newtonsoft.Json.8.0.2\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\Hl7.Fhir.Core\Support\Error.cs">
      <Link>Support\Error.cs</Link>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="..\Hl7.Fhir.Core\Support\ReflectionHelper.cs">
      <Link>Support\ReflectionHelper.cs</Link>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="..\Hl7.Fhir.Core\Support\StringExtensions.cs">
      <Link>Support\StringExtensions.cs</Link>
    </Compile>
    <Compile Include="Properties\AssemblyVersionInfo.cs" />
    <Compile Include="Specification\Source\CachedResolver.cs" />
    <Compile Include="Specification\Source\IConformanceSource.cs" />
    <Compile Include="Specification\Source\MultiResolver.cs" />
    <Compile Include="Specification\Source\OriginInformation.cs" />
    <Compile Include="Specification\Source\ResourceResolverExtensions.cs" />
    <Compile Include="Specification\Source\IArtifactSource.cs" />
    <Compile Include="Specification\Source\WebResolver.cs" />
    <Compile Include="Specification\Snapshot\SnapshotElementBaseGenerator.cs" />
    <Compile Include="Specification\Snapshot\SnapshotGeneratorExtensions.cs" />
    <Compile Include="Specification\Snapshot\SnapshotGeneratorOutcome.cs" />
    <Compile Include="Validation\Cardinality.cs" />
    <Compile Include="Validation\ChildConstraintExtensions.cs" />
    <Compile Include="Validation\FixedPatternExtensions.cs" />
    <Compile Include="Validation\InstanceToProfileMatcher.cs" />
    <Compile Include="Validation\Issue.cs" />
    <Compile Include="Specification\Navigation\ElementNavigatorTypeExtensions.cs" />
    <Compile Include="Specification\Navigation\ProfileReference.cs" />
    <Compile Include="Specification\Snapshot\DifferentialTreeConstructor.cs" />
    <Compile Include="Specification\Snapshot\ElementMatcher.cs" />
    <Compile Include="Specification\Snapshot\ElementDefnMerger.cs" />
    <Compile Include="Specification\Snapshot\SnapshotGenerator.cs" />
    <Compile Include="Specification\Navigation\Bookmark.cs" />
    <Compile Include="Specification\Navigation\ElementDefinitionNavigator.cs" />
    <Compile Include="Specification\Navigation\ElementNavigatorModificationExtensions.cs" />
    <Compile Include="Specification\Navigation\ElementNavigatorMovementExtensions.cs" />
    <Compile Include="Specification\Navigation\ProfileNavigationExtensions.cs" />
    <Compile Include="Specification\Snapshot\SnapshotGeneratorEvents.cs" />
    <Compile Include="Specification\Snapshot\SnapshotGeneratorSettings.cs" />
    <Compile Include="Specification\Snapshot\SnapshotRecursionChecker.cs" />
    <Compile Include="Specification\Source\SourceFactory.cs" />
    <Compile Include="Specification\Source\ZipSource.cs" />
    <Compile Include="Specification\Source\DirectorySource.cs" />
    <Compile Include="Specification\Source\IResourceResolver.cs" />
    <Compile Include="Specification\Source\SchemaCollection.cs" />
    <Compile Include="Specification\Source\ResourceStreamScanner.cs" />
    <Compile Include="Specification\Source\ZipCacher.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Validation\OperationOutcomeValidationExtensions.cs" />
    <Compile Include="Validation\PocoValidationExtensions.cs" />
    <Compile Include="Validation\ScopedIdentifierResolver.cs" />
    <Compile Include="Validation\ValidationContext.cs" />
    <Compile Include="Validation\ValidationOutcomeExtensions.cs" />
    <Compile Include="Validation\TypeRefExtensions.cs" />
    <Compile Include="Validation\Validator.cs" />
    <Compile Include="XPath\CustomXsltFunction.cs" />
    <Compile Include="XPath\FhirNamespaceManager.cs" />
    <Compile Include="XPath\JsonReaderExtensions.cs" />
    <Compile Include="XPath\JsonXPathNavigator.cs" />
    <Compile Include="XPath\JTokenExtensions.cs" />
    <Compile Include="XPath\NavigatorState.cs" />
    <Compile Include="XPath\XPath2Context.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Hl7.Fhir.Core\Hl7.Fhir.Core.Net45.csproj">
      <Project>{92cc9186-0a21-4e06-b11f-907584fbfd81}</Project>
      <Name>Hl7.Fhir.Core.Net45</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="specification.zip">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild">
    <CleanSpecFiles DirectoryName="data" />
    <ZipDir ZipFileName="specification.zip" DirectoryName="data" />
  </Target>
  <UsingTask TaskName="ZipDir" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <ZipFileName ParameterType="System.String" Required="true" />
      <DirectoryName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
		  try
		  {
			Log.LogMessage(string.Format("Zipping Directory {0} to {1}", DirectoryName, ZipFileName));
			if(File.Exists(ZipFileName)) File.Delete(ZipFileName);
			ZipFile.CreateFromDirectory( DirectoryName, ZipFileName );
			return true;
		  }
		  catch(Exception ex)
		  {
			Log.LogErrorFromException(ex);
			return false;
		  }
		]]></Code>
    </Task>
  </UsingTask>
  <UsingTask TaskName="CleanSpecFiles" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <DirectoryName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.XML" />
      <Reference Include="System.Xml.Linq" />
      <Using Namespace="System.Xml.Linq" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs"><![CDATA[
		  try
		  {
		    Log.LogMessage(string.Format("Cleaning spec files in directory {0}", DirectoryName));

			var fhirns = XNamespace.Get("http://hl7.org/fhir");
			var xmlns = XNamespace.Xmlns;
			var files = Directory.EnumerateFiles(DirectoryName, "*.xml");

            foreach(var file in files)
            {
                var xdoc = XDocument.Load(file);
                var narrative = xdoc.Elements(fhirns + "Bundle").Elements(fhirns + "entry").Elements(fhirns + "resource")
                        .Elements().Elements(fhirns + "text").Elements(xmlns + "div");
                foreach(var narrativeElement in narrative)
                {
                    narrativeElement.RemoveNodes();
                    narrativeElement.Add(new XElement(xmlns + "p",
                        new XText("The narrative has been removed to reduce the size of the distribution of the Hl7.Fhir.Specification library")));
                }

                xdoc.Save(file);
            }
		  }
		  catch(Exception ex)
		  {
			Log.LogErrorFromException(ex);
			return false;
		  }
		]]></Code>
    </Task>
  </UsingTask>
</Project>